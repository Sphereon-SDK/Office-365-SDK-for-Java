// This is the build script for all libraries/folders in this repo.

apply plugin: 'java'
apply plugin: 'maven'
apply plugin: 'com.jfrog.artifactory-upload'

group = project.mavenGroupId
version = project.mavenVersion

//def targetRepo = project.version.endsWith('-SNAPSHOT')?'oss-snapshot-local':'oss-release-local'
def targetRepo = 'oss-snapshot-local'

repositories {
    maven {
        url  "http://dl.bintray.com/msopentech/Maven"
    }
}

dependencies {
    compile 'com.google.code.gson:gson:2.3'
    compile 'com.google.guava:guava:18.0'
    compile 'com.microsoft.azure:adal4j:1.0.0'
    compile 'org.json:json:20090211'
    compile group: 'commons-io', name: 'commons-io', version: '2.6'
    compile 'com.microsoft.services.orc:orc-java:1.0.0'
}

uploadArchives {
    configuration = configurations.archives
    repositories.mavenDeployer {
        pom {
           setGroupId project.mavenGroupId
           setArtifactId project.mavenArtifactId
           setVersion project.mavenVersion
        }
        repository (url: project.mavenRepoUrl) {
            authentication(
                 // put these values in local file ~/.gradle/properties.gradle
                 userName: project.hasProperty("bintrayUsername") ? project.bintrayUsername : "",
                 password: project.hasProperty("bintrayApikey") ? project.bintrayApikey : ""
            )
        }
    }
}

artifactory {
    contextUrl = 'https://oss.jfrog.org'
    publish {
        repository {
            repoKey = targetRepo
            username = project.hasProperty("bintrayUsername") ? project.bintrayUsername : ""
            password = project.hasProperty("bintrayApikey") ? project.bintrayApikey : ""
        }
        defaults {
            publishConfigs('archives')
            publishPom = true //Publish generated POM files to Artifactory (true by default)
            publishIvy = false //Publish generated Ivy descriptor files to Artifactory (true by default)
        }
    }
    resolve {
        repository {
            repoKey = 'oss-release-local'
        }
    }
}

task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

artifacts {
    archives javadocJar
    archives sourcesJar
}

artifactoryPublish {
    dependsOn sourcesJar
}
